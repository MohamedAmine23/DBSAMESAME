create database samesame_brussels

go

use samesame_brussels
go

create table JEUNES
(
CODE_JEUNES INT IDENTITY(13000,1) NOT NULL PRIMARY KEY,
NOM varchar(20) NOT NULL,
PRENOM varchar(20) NOT NULL,
AGE int NOT NULL CHECK(AGE BETWEEN 5 AND 23),
MAIL varchar(50) NOT NULL,
ADRESSE varchar(50) NULL,
CODE_POSTAL int NOT NULL,

)

GO
CREATE TABLE ACTIVITES
(
CODE_ACTIVITES INTEGER IDENTITY (1,1) NOT NULL PRIMARY KEY,
TITRE varchar(30) NOT NULL,
ADRESSE varchar(50) NULL,
PRIX  INT NOT NULL,
ID_RESPONSABLE INTEGER,
CONSTRAINT FK_CODE_RESPONSABLE FOREIGN KEY(ID_RESPONSABLE) REFERENCES RESPONSABLE(CODE_RESPONSABLE)
)

GO
CREATE TABLE INSCRIPTION 
(
ID_JEUNES INT NOT NULL,
ID_ACTIVITES INT NOT NULL,
DATE_INSC DATE DEFAULT GETDATE(),
CONSTRAINT PK_INSCRIPTION PRIMARY KEY(ID_JEUNES,ID_ACTIVITES),
CONSTRAINT FK_INSCRIPTION_J FOREIGN KEY(ID_JEUNES) REFERENCES JEUNES(CODE_JEUNES),
CONSTRAINT FK_INSCRIPTION_A FOREIGN KEY(ID_ACTIVITES) REFERENCES ACTIVITES(CODE_ACTIVITES),
)

GO
create table RESPONSABLE 
(
CODE_RESPONSABLE INT IDENTITY(2020,1) PRIMARY KEY,
NOM varchar(20) NOT NULL,
PRENOM varchar(20) NOT NULL,
AGE int NOT NULL,
MAIL varchar(50) NOT NULL,
ADRESSE varchar(50) NULL,
CODE_POSTAL int NOT NULL,
FORMATION varchar(50) NOT NULL,

)
GO
ALTER TABLE RESPONSABLE ADD CONSTRAINT C_AGE CHECK(AGE BETWEEN 18 AND 67)
GO
ALTER TABLE JEUNES ADD CONSTRAINT C_MAILJ  UNIQUE (MAIL)
GO
ALTER TABLE RESPONSABLE ADD CONSTRAINT C_MAILR  UNIQUE(MAIL)
GO
ALTER TABLE JEUNES ADD CONSTRAINT C_CODE_POST CHECK( CODE_POSTAL BETWEEN 1000 AND 9999)
GO


GO
INSERT INTO JEUNES VALUES('Fleury','Rose',17,'rosyyy@mail.com','dgdtgh',1030)
INSERT INTO JEUNES VALUES('Natura', 'Filip',12,'fifo@mail.com','',1210)
INSERT INTO JEUNES VALUES('Mitura', 'Ofely',8,'Ofifi@mail.com','',1030)
INSERT INTO JEUNES VALUES('Mito', 'Tommy',7,'mytho@mail.com','',1030)
INSERT INTO JEUNES VALUES('Pavoshko', 'Rodrigue',16,'Roro@mail.com','',1000)




INSERT INTO RESPONSABLE VALUES('zizaoui','mohamed amine',23,'amine0520@hotmail.com','hkfjhjsklghtjksgh',1210,'étudiant')
INSERT INTO RESPONSABLE VALUES('ZIZOU','MINO',23, 'TAESHADOWMASTER@MAIL.COM','DFGTDYHYUK',1210,'ANIMATEUR')
INSERT INTO RESPONSABLE VALUES('KAZE','KAMI',25,'GROSDURE@MAIL.COM','FHJEGHJFHRJK',1030,'COACH SPORTIF')

INSERT INTO ACTIVITES VALUES('Basket-ball','',100,2022)
INSERT INTO ACTIVITES VALUES('Taekwondo','',200,2021)
INSERT INTO ACTIVITES VALUES('soutien scolaire','',40,2020)
INSERT INTO ACTIVITES VALUES('mini-foot','',60,2021)
INSERT INTO ACTIVITES VALUES('Taekwondo','',200,2020)

INSERT INTO INSCRIPTION(ID_JEUNES,ID_ACTIVITES) VALUES(13000,1)
INSERT INTO INSCRIPTION(ID_JEUNES,ID_ACTIVITES) VALUES(13000,2)
INSERT INTO INSCRIPTION(ID_JEUNES,ID_ACTIVITES) VALUES(13000,3)
INSERT INTO INSCRIPTION(ID_JEUNES,ID_ACTIVITES) VALUES(13001,4)
INSERT INTO INSCRIPTION(ID_JEUNES,ID_ACTIVITES) VALUES(13002,5)
INSERT INTO INSCRIPTION(ID_JEUNES,ID_ACTIVITES) VALUES(13003,1)
INSERT INTO INSCRIPTION(ID_JEUNES,ID_ACTIVITES) VALUES(13004,2)
INSERT INTO INSCRIPTION(ID_JEUNES,ID_ACTIVITES) VALUES(13003,3)



--VUE CONTENANT LA LISTE DES JEUNES QUI HABITENT SCHAERBEEK
CREATE VIEW JEUNES_SCHAERBEEKOIS AS SELECT * FROM JEUNES j WHERE CODE_POSTAL=1030 WITH CHECK OPTION
GO
select * from JEUNES_SCHAERBEEKOIS
GO



--VUE CONTENANT LA LISTES DES ACTIVITES ET DE LEUR RESPONSABLE
CREATE VIEW LISTE_ACTIVITES AS SELECT a.TITRE, r.NOM, r.PRENOM FROM ACTIVITES a join RESPONSABLE r   on a.ID_RESPONSABLE=r.CODE_RESPONSABLE
GO
SELECT * FROM LISTE_ACTIVITES
GO

--CREER UNE FONCTION scalaire QUI CALCULE LE PRIX TOTAL QU UN JEUNE DOIS PAYER S IL PARTICIPE A PLUSIEURS ACTIVITES

ALTER FUNCTION prix_total(@j int)
--j pour jeunes
	returns int
	as 
	BEGIN
	DECLARE  @total int;
	
	SELECT @total=SUM(PRIX) FROM ACTIVITES JOIN INSCRIPTION i ON   CODE_ACTIVITES= i.ID_ACTIVITES WHERE ID_JEUNES = @j

	return @total
	END
GO

SELECT dbo.prix_total(13000)
-- FONCTION TABLE QUI AFFICHE LES ACTIVITES AUX QUELS LE  JEUNES EST INSCRIT
CREATE FUNCTION inscrit(@j int)
returns table
as
return (SELECT a.TITRE,a.PRIX,a.ADRESSE FROM INSCRIPTION i LEFT JOIN ACTIVITES a on i.ID_ACTIVITES=a.CODE_ACTIVITES where i.ID_JEUNES = @j)

select * from dbo.inscrit(13000)

--CREATION D UNE PROCEDURE STOCKEES qui permet d'inscrire un nouveau jeune en respectant le nombre max de jeunes par activités(15)
CREATE PROCEDURE new_inscription (@nom varchar(20),@prenom varchar(20),@age int,@mail varchar(20), @codpost int,@acti int)
AS
BEGIN
DECLARE @num int
if  ((SELECT COUNT(*) FROM INSCRIPTION  WHERE ID_ACTIVITES = @acti ) > 15)
	RAISERROR('plus de places pour cette activités',12,1)
ELSE
	begin 
	INSERT INTO JEUNES VALUES(@nom,@prenom,@age,@mail,'',@codpost)
	select @num =IDENT_CURRENT('JEUNES')
	INSERT INTO INSCRIPTION(ID_JEUNES,ID_ACTIVITES) VALUES(@num,@acti)
	end
end
go

exec new_inscription 'LOUVAIN','GERARD',16,'gege@mail.com',1210,3


--creation d'un trigger 
create trigger nb_inscrit_max  on INSCRIPTION
AFTER insert
AS 
BEGIN
DECLARE @ID_ACTIVITES INT
DECLARE @ID_JEUNES INT 
SELECT   @ID_ACTIVITES=  ID_ACTIVITES FROM INSERTED
SELECT @ID_JEUNES = COUNT(*) from INSCRIPTION where ID_ACTIVITES=ID_ACTIVITES

IF @ID_JEUNES>15
ROLLBACK
END 
GO
